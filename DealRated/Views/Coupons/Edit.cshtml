@model DealRated.Models.Coupon

@{
    ViewData["Title"] = "Edit";
}

<div class="text-center">
    <h1 class="display-4">Edit Coupon Details</h1>
</div>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CouponID" />
            <div class="form-group">
                <label asp-for="CouponCode" class="control-label"></label>
                <input asp-for="CouponCode" class="form-control" />
                <span asp-validation-for="CouponCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Percentage" class="control-label"></label>
                <input asp-for="Percentage" class="form-control" />
                <span asp-validation-for="Percentage" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Status" /> @Html.DisplayNameFor(model => model.Status)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="StoreID" class="control-label"></label>
                <select asp-for="StoreID" class="form-control" asp-items="ViewBag.StoreID"></select>
                <span asp-validation-for="StoreID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save Details" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
